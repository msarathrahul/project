model_name,model,mae,mse,rmse,r2,adjusted_r2
GradientBoosting Regression,"GridSearchCV(cv=10,
             estimator=Pipeline(steps=[('GradientBoosting Regression',
                                        GradientBoostingRegressor())]),
             param_grid={'GradientBoosting Regression__learning_rate': [0.01,
                                                                        0.1,
                                                                        1],
                         'GradientBoosting Regression__max_depth': [3, 5, 10],
                         'GradientBoosting Regression__n_estimators': [50, 100,
                                                                       200]},
             refit='r2', scoring=['neg_mean_squared_error', 'r2'])",3.029206458716213,22.110120192147438,4.702139958800401,0.918284467724454,0.918284467724454
XGB Regression,"GridSearchCV(cv=10,
             estimator=Pipeline(steps=[('XGB Regression',
                                        XGBRegressor(base_score=None,
                                                     booster=None,
                                                     callbacks=None,
                                                     colsample_bylevel=None,
                                                     colsample_bynode=None,
                                                     colsample_bytree=None,
                                                     early_stopping_rounds=None,
                                                     enable_categorical=False,
                                                     eval_metric=None,
                                                     feature_types=None,
                                                     gamma=None, gpu_id=None,
                                                     grow_policy=None,
                                                     importance_type=None,
                                                     interaction_con...
                                                     max_leaves=None,
                                                     min_child_weight=None,
                                                     missing=nan,
                                                     monotone_constraints=None,
                                                     n_estimators=100,
                                                     n_jobs=None,
                                                     num_parallel_tree=None,
                                                     predictor=None,
                                                     random_state=None, ...))]),
             param_grid={'XGB Regression__learning_rate': [0.01, 0.1, 1],
                         'XGB Regression__max_depth': [3, 5, 10],
                         'XGB Regression__n_estimators': [50, 100, 200]},
             refit='r2', scoring=['neg_mean_squared_error', 'r2'])",3.114473380486942,22.507294279855792,4.7441853125542846,0.9168165746645751,0.9168165746645751
Random Forest Regression,"GridSearchCV(cv=10,
             estimator=Pipeline(steps=[('Random Forest Regression',
                                        RandomForestRegressor())]),
             param_grid={'Random Forest Regression__max_depth': [None, 10, 20],
                         'Random Forest Regression__min_samples_split': [2, 5,
                                                                         10],
                         'Random Forest Regression__n_estimators': [50, 100,
                                                                    200]},
             refit='r2', scoring=['neg_mean_squared_error', 'r2'])",3.752860609107726,30.182320077582165,5.493843834473471,0.8884508845263325,0.8884508845263325
SVM Regression,"GridSearchCV(cv=10, estimator=Pipeline(steps=[('SVM Regression', SVR())]),
             param_grid={'SVM Regression__C': [0.1, 1, 10],
                         'SVM Regression__kernel': ['linear', 'rbf']},
             refit='r2', scoring=['neg_mean_squared_error', 'r2'])",4.412154290639074,37.98418152882574,6.163130821978854,0.859616429729707,0.859616429729707
KNN Regression,"GridSearchCV(cv=10,
             estimator=Pipeline(steps=[('KNN Regression',
                                        KNeighborsRegressor())]),
             param_grid={'KNN Regression__n_neighbors': [3, 5, 7],
                         'KNN Regression__weights': ['uniform', 'distance']},
             refit='r2', scoring=['neg_mean_squared_error', 'r2'])",4.356994817472642,44.11819264403912,6.642152711586743,0.8369460878723254,0.8369460878723254
Decision tree Regression,"GridSearchCV(cv=10,
             estimator=Pipeline(steps=[('Decision tree Regression',
                                        DecisionTreeRegressor())]),
             param_grid={'Decision tree Regression__max_depth': [None, 10, 20],
                         'Decision tree Regression__min_samples_split': [2, 5,
                                                                         10]},
             refit='r2', scoring=['neg_mean_squared_error', 'r2'])",4.386699029126214,47.6203213592233,6.900747884050199,0.824002770080666,0.824002770080666
Linear Regression,"GridSearchCV(cv=10,
             estimator=Pipeline(steps=[('Linear Regression',
                                        LinearRegression())]),
             param_grid={}, refit='r2',
             scoring=['neg_mean_squared_error', 'r2'])",5.638236561596232,51.05488595245392,7.145270180507797,0.8113091586741454,0.8113091586741454
Ridge Regression,"GridSearchCV(cv=10, estimator=Pipeline(steps=[('Ridge Regression', Ridge())]),
             param_grid={'Ridge Regression__alpha': [0.1, 1, 10]}, refit='r2',
             scoring=['neg_mean_squared_error', 'r2'])",5.638638785324749,51.061422986647315,7.145727603725692,0.8112849988222779,0.8112849988222779
Lasso Regression,"GridSearchCV(cv=10, estimator=Pipeline(steps=[('Lasso Regression', Lasso())]),
             param_grid={'Lasso Regression__alpha': [0.1, 1, 10]}, refit='r2',
             scoring=['neg_mean_squared_error', 'r2'])",5.687971635693672,52.05122791525905,7.214653693370115,0.8076268352353069,0.8076268352353069
AdaBoost Regression,"GridSearchCV(cv=10,
             estimator=Pipeline(steps=[('AdaBoost Regression',
                                        AdaBoostRegressor())]),
             param_grid={'AdaBoost Regression__learning_rate': [0.01, 0.1, 1],
                         'AdaBoost Regression__n_estimators': [50, 100, 200]},
             refit='r2', scoring=['neg_mean_squared_error', 'r2'])",6.159845704205245,55.297074948127026,7.436200303120339,0.7956306942975471,0.7956306942975471
